@using Application.Statics
@model Application.Dtos.TransactionDtos.CreateTransactionDtos

@{
    ViewData["Title"] = "TransactionAmount";
}

<h1>TransactionAmount</h1>

<h4>CreateTransactionDtos</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="TransactionAmount">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" value="@User.GetUserId()" readonly="readonly" asp-for="Username"/>
            <input asp-for="SelfAccountId" type="hidden" readonly="readonly" value="@ViewBag.accountId" class="form-control" />
            <div class="form-group">
                <label asp-for="OthersAccountIdAsString" class="control-label"></label>
                <select asp-for="OthersAccountIdAsString" class="form-control" asp-items="@ViewBag.othersAccount"></select>
                <span asp-validation-for="OthersAccountIdAsString" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FromCurrency" class="control-label"></label>
                <input asp-for="FromCurrency" value="@ViewBag.fromCurrency" readonly="readonly" class="form-control" />
                <span asp-validation-for="FromCurrency" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
